from typing import List, TypeVar, Tuple, Dict, Set
T = TypeVar('T')
#9.2
def repetes(l : List[T]) -> Set[T] :
    vus : Set[T] = set()
    ens : Set[T] = set()

    e : T

    for e in l:
        if e in vus:
            ens.add(e)
        else:
            vus.add(e)
    
    return ens

assert repetes([1,2,3,4]) == set()
assert repetes([1,2,2,4]) == {2}

def sans_repetes(l : List[T]) -> List[T] :

    vus : Set[T] = set()

    lr : List[T] = []

    e:T

    for e in l :
        if e not in vus:
            lr.append(e)
            vus.add(e)
    
    return lr

assert sans_repetes([1,2,3,4]) == [1,2,3,4]
assert sans_repetes([1,2,2,4]) == [1,2,4]

def uniques(l : List[T]) -> Set[T]:

    unefois : Set[T] = set()

    trop : Set[T] = set()

    e:T

    for e in l :
        if e in unefois:
            trop.add(e)
        else : 
            unefois.add(e)


    return unefois - trop

assert uniques([1,2,3,4]) == {1,2,3,4}
assert uniques([1,1,1,1,2,2,2,3]) == {3}

#9.6

Dict_Ang_Fra : Dict[str,str]
Dict_Fra_Ita : Dict[str,str]

Dict_Fra_Ita = {'le':'il', 'chat':'gato', 'poisson':'pesce'}
Dict_Ang_Fra = {'the':'le', 'cat':'chat', 'fish':'poisson'}

def traduction_mot_a_mot(l:List[str], dico : Dict[str,str])->List[str]:
    lr : List[str] = []

    m:str
    for m in l:
        lr.append(dico[m])

    return lr

assert traduction_mot_a_mot(['le', 'poisson'], Dict_Fra_Ita) == ['il', 'pesce']

def dictionnaire_inverse(dico:Dict[str,str])->Dict[str,str]:
    dr : Dict[str,str] = dict()

    m :str

    for m in dico:
        dr[dico[m]]=m

    return dr

#print(dictionnaire_inverse(Dict_Fra_Ita))

def composition_dictionnaires(dico1 : Dict[str,str], dico2 : Dict[str,str])-> Dict[str,str]:

    dr : Dict[str,str] = dict()

    m : str

    for m in dico1 :
        dr[m] = dico2[dico1[m]]

    return dr

print(composition_dictionnaires(Dict_Ang_Fra, Dict_Fra_Ita))


#10.2

LivresBD : Dict[str,Tuple[str,int]]
LivresBD = {'Les misÃ©rables':('Victor Hugo', 5),
'Le dernier des Mohicans':('James F. Cooper', 0),
'Un animal douÃ© de raison': ('Robert Merle', 6),
'Le grand Meaulnes':('Alain Fournier', 1),
'Notre-dame de Paris':('Victor Hugo', 4),
'Les comtemplations':('Victor Hugo', 0) }

# def auteurs(livres : Dict[str,Tuple[str,int]]) -> Set[str]:

#     return {auteur for }
